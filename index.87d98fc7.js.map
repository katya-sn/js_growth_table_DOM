{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,EAAM,OAAO,CAAC,EAAE,CACxB,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAM,IAAI,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAErB,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAE5C,EAAU,gBAAgB,CAAC,QAAS,WAC9B,EAAU,QAAQ,EACpB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,EAIA,IAAM,EAAM,EAAM,gBAAgB,CAAC,SAAS,CAAC,CAAA,GAE7C,EAAM,MAAM,CAAC,GAEa,KAAtB,EAAM,IAAI,CAAC,MAAM,EACnB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,CAGF,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAC9B,EAAU,QAAQ,EACpB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,EAMA,AAFgB,EAAM,gBAAgB,CAE9B,MAAM,GAEY,IAAtB,EAAM,IAAI,CAAC,MAAM,EACnB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACjC,EAAa,QAAQ,EACvB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAIA,EAAK,OAAO,CAAC,SAAC,CAAd,EAGE,AAFgB,EAAI,UAAU,GAEtB,WAAW,CAAG,EACxB,GAEmC,KAA/B,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAC5B,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACjC,EAAa,QAAQ,EACvB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAIA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAI,UAAU,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,E,GAErB,IAA/B,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAC5B,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tbody = table.tBodies[0];\nvar rows = _to_consumable_array(tbody.rows);\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nappendRow.addEventListener(\"click\", function() {\n    if (removeRow.disabled) removeRow.disabled = false;\n    var row = tbody.lastElementChild.cloneNode(true);\n    tbody.append(row);\n    if (table.rows.length === 10) appendRow.disabled = true;\n});\nremoveRow.addEventListener(\"click\", function() {\n    if (appendRow.disabled) appendRow.disabled = false;\n    var lastRow = tbody.lastElementChild;\n    lastRow.remove();\n    if (table.rows.length === 2) removeRow.disabled = true;\n});\nappendColumn.addEventListener(\"click\", function() {\n    if (removeColumn.disabled) removeColumn.disabled = false;\n    rows.forEach(function(row) {\n        var newCell = row.insertCell();\n        newCell.textContent = \"\";\n    });\n    if (table.rows[0].cells.length === 10) appendColumn.disabled = true;\n});\nremoveColumn.addEventListener(\"click\", function() {\n    if (appendColumn.disabled) appendColumn.disabled = false;\n    rows.forEach(function(row) {\n        return row.deleteCell(row.cells.length - 1);\n    });\n    if (table.rows[0].cells.length === 2) removeColumn.disabled = true;\n});\n\n//# sourceMappingURL=index.87d98fc7.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = table.tBodies[0];\nconst rows = [...tbody.rows];\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nappendRow.addEventListener('click', () => {\n  if (removeRow.disabled) {\n    removeRow.disabled = false;\n  }\n\n  const row = tbody.lastElementChild.cloneNode(true);\n\n  tbody.append(row);\n\n  if (table.rows.length === 10) {\n    appendRow.disabled = true;\n  }\n});\n\nremoveRow.addEventListener('click', () => {\n  if (appendRow.disabled) {\n    appendRow.disabled = false;\n  }\n\n  const lastRow = tbody.lastElementChild;\n\n  lastRow.remove();\n\n  if (table.rows.length === 2) {\n    removeRow.disabled = true;\n  }\n});\n\nappendColumn.addEventListener('click', () => {\n  if (removeColumn.disabled) {\n    removeColumn.disabled = false;\n  }\n\n  rows.forEach((row) => {\n    const newCell = row.insertCell();\n\n    newCell.textContent = '';\n  });\n\n  if (table.rows[0].cells.length === 10) {\n    appendColumn.disabled = true;\n  }\n});\n\nremoveColumn.addEventListener('click', () => {\n  if (appendColumn.disabled) {\n    appendColumn.disabled = false;\n  }\n\n  rows.forEach((row) => row.deleteCell(row.cells.length - 1));\n\n  if (table.rows[0].cells.length === 2) {\n    removeColumn.disabled = true;\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","tbody","tBodies","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","appendRow","removeRow","appendColumn","removeColumn","addEventListener","disabled","row","lastElementChild","cloneNode","append","lastRow","remove","forEach","newCell","insertCell","textContent","cells","deleteCell"],"version":3,"file":"index.87d98fc7.js.map"}